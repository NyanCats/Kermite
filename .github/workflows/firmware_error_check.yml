name: Firmware ErrorCheck

on:
  push:
    branches: [variants, variants-dev]
    paths:
      - ".github/workflows/firmware_error_check.yml"
      - "firmware/ci/**/*.ts"
      - "firmware/Makefile"
      - "firmware/workers/*.mk"
      - "firmware/src/**"
      - "software/src/shell/loaders/**/*.ts"

  pull_request:
    branches: [variants]
    types: [opened, synchronize]
    paths:
      - "firmware/Makefile"
      - "firmware/workers/*.mk"
      - "firmware/src/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      # - name: Install Dependencies
      #   run: sudo apt install gcc-avr avr-libc binutils-avr

      - uses: engineerd/configurator@v0.0.6
        with:
          name: "avr-gcc"
          url: "http://depot.kermite.org/materials/avr-gcc-11.1.0-x64-linux.tar.bz2"
          pathInArchive: "bin/avr-gcc"

      - run: avr-gcc --version
      - run: avr-size --version

      - name: install arm-none-eabi-gcc
        uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: "10-2020-q4"

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - uses: bahmutov/npm-install@v1
        with:
          working-directory: ./firmware/ci

      - run: yarn checkHardcodedVersions
        working-directory: ./firmware/ci

      - name: Check Project IDs
        run: yarn checkProjectIds --abortOnError
        working-directory: ./firmware/ci

      - name: Check Project Related Json Schemas
        run: yarn checkProjectJsonSchemas
        working-directory: ./firmware/ci

      - name: Check Firmware Build Errors
        run: yarn buildAll --abortOnError
        working-directory: ./firmware/ci
